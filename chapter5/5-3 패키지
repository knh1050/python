패키지(packages) : 관련 있는 모듈의 집합을 말한다. 패키지는 파이썬 모듈을 계층적(디렉터리 구조)으로 관리할 수 있게 해 준다.
파이썬에서 모듈은 하나의 .py 파일이다.

패키지 만들기

1. 서브 디렉토리 및 .py 파일 생성
C:/doit/game/__init__.py
C:/doit/game/sound/__init__.py
C:/doit/game/sound/echo.py
C:/doit/game/graphic/__init__.py
C:/doit/game/graphic/render.py

2. 각 디렉터리에 __init__.py 파일을 만들어 놓기만 하고 내용은 일단 비워 둔다.

3. echo.py 파일의 내용은 다음과 같이 작성한다.
# echo.py
def echo_test():
    print("echo")

4. render.py 파일의 내용은 다음과 같이 작성한다.
# render.py
def render_test():
    print("render")

5. 다음 예제를 수행하기 전에 우리가 만든 game 패키지를 참조할 수 있도록 명령 프롬프트 창에서 set 명령어로 PYTHONPATH 환경 변수에 C:/doit 디렉터리를 추가한다. 그리고 파이썬 인터프리터를 실행한다.
C:\doit>set PYTHONPATH=C:/doit
C:\doit>python
Python 3.11.2 (tags/v3.11.2:878ead1, Feb  7 2023, 16:38:35) [MSC v.1934 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>>

-------------------------------------------------------------------------------------

패키지 안의 함수 실행하기(명령 프롬프트의 파이썬 인터프리터에서 실습)

>>> import game.sound.echo
>>> game.sound.echo.echo_test()
echo
>>> exit()

C:\doit>python
Python 3.11.2 (tags/v3.11.2:878ead1, Feb  7 2023, 16:38:35) [MSC v.1934 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> from game.sound import echo
>>> echo.echo_test()
echo

>>> from game.sound.echo import echo_test
>>> echo_test()
echo

도트 연산자(.)를 사용해서 import a.b.c처럼 import할 때 가장 마지막 항목인 c는 반드시 모듈 또는 패키지여야만 한다.

-------------------------------------------------------------------------------------

__init__.py의 용도

__init__.py 파일은 해당 디렉터리가 패키지의 일부임을 알려 주는 역할을 한다. 
만약 game, sound, graphic 등 패키지에 포함된 디렉터리에 __init__.py 파일이 없다면 패키지로 인식되지 않는다.
또한, __init__.py 파일은 패키지와 관련된 설정이나 초기화 코드를 포함할 수 있다.
# 다음에 나오는 예제는 __init__.py 파일을 수정한 후 반드시 파이썬 인터프리터를 종료하고 다시 실행해야 한다.

